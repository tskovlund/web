version: "3"

services:
  app:
    image: &app beeracademy/web
    restart: always
    networks:
      - web
      - default
    volumes:
      - ./media:/app/media
      - ./.env:/app/.env
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=academy.beer"
      - "traefik.frontend.rule=Host:academy.beer"
      - "traefik.port=8000"
      - "traefik.docker.network=web"
      - "traefik.domain=academy.beer"
    container_name: academy.beer
    depends_on:
      - db
      - media
      - celery
      - celery-beat

  celery:
    image: *app
    command: ["celery", "worker", "--app=academy", "--loglevel=INFO"]
    volumes:
      - ./.env:/app/.env
    depends_on:
      - rabbitmq
      - db

  celery-beat:
    image: *app
    command: ["celery", "beat", "--app=academy", "--loglevel=INFO", "--scheduler=django_celery_beat.schedulers:DatabaseScheduler"]
    volumes:
      - ./.env:/app/.env
    depends_on:
      - rabbitmq
      - db

  db:
    image: postgres:11

  media:
    image: nginx:alpine
    volumes:
      - ./media:/usr/share/nginx/html
    networks:
      - web
    expose:
      - "80"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=media.academy.beer"
      - "traefik.frontend.rule=Host:media.academy.beer"
      - "traefik.port=80"
      - "traefik.docker.network=web"
      - "traefik.domain=media.academy.beer"
    container_name: media.academy.beer

  rabbitmq:
    image: rabbitmq

networks:
  web:
    external: true
